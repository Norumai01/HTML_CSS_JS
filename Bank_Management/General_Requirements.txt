Frontend: React
Backend: Django 
SQL Database: PostgreSQL or MySQL

Summary: Creating a full-stack frontend and backend website for user to manage their bank account such as core banking features.

Requirements:

Backend:
Authentication/Authorization: Authenticate and authorize access to account. (OAuth)
Database Management: Reliable database system to store users' information. (PostgreSQL or MySQL)
Backend Client: Backend CRUD operation to handle client-server communication such as user login, account balance retrieval, fund transfers and viewing transaction history. 
Concurrency/Transaction: Ensures the back-end can handle concurrent requests and maintain data consistency.
Scalability: Design with the flexibility of many users and features.


Frontend:
User Authentication: Sign up, login and logout with email and password.
Dashboard: User-friendly dashboard for users to view account balance.
Account Management: Updating personal information like email and password.
View Transaction history.
Fund Transferring: Deposit, Withdraw, and transfer.
Error handling and Feedback: Provide meaningful error user validation input.


Optional:

Backend:
Security Measures: Input validation, SQL injection, HTTPS for secure communication and sensitive data.
Logging/Monitoring: Logging mechanisms to track user activities, errors and system errors.
Compliance/Regulation: Complied with banking regulations and security standards.


Frontend:
Bill Payments
Account Statements: Generate an account statement in PDF or CSV for tax purposes.
Responsive Design: Minimal latency and responsive transition.
Security Features: HTTPS to ensure the security of user data and transactions.
